openapi: 3.0.3
info:
  title: photonic
  description: ''
  license:
    name: ''
  version: 0.1.0
servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://photonic.mvissing.de
    description: Staging server
paths:
  /api/v1/album:
    get:
      tags:
        - album
      operationId: find_all_albums
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: include_empty_albums
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 50
            maximum: 100
            minimum: 1
        - name: page_last_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: page_last_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
            nullable: true
        - name: direction
          in: query
          required: false
          schema:
            oneOf:
              - type: string
                enum:
                  - Asc
                  - Desc
            default: Desc
      responses:
        '200':
          description: Information on all albums
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlbumResponse'
    post:
      tags:
        - album
      operationId: create_album
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumInput'
        required: true
      responses:
        '201':
          description: The id of the newly created album
          content:
            application/json:
              schema:
                type: string
                format: uuid
  /api/v1/info:
    get:
      tags:
        - system
      operationId: system_info
      responses:
        '200':
          description: Info on the current system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
  /api/v1/medium:
    get:
      tags:
        - medium
      operationId: get_all_media
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 50
            maximum: 100
            minimum: 1
        - name: page_last_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: page_last_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
            nullable: true
        - name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: album_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
            nullable: true
        - name: direction
          in: query
          required: false
          schema:
            oneOf:
              - type: string
                enum:
                  - Asc
                  - Desc
            default: Desc
        - name: include_no_album
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Gets all media. Can be filtered by date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediumResponse'
    post:
      tags:
        - medium
      operationId: create_medium
      parameters:
        - name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: medium_type
          in: query
          required: false
          schema:
            oneOf:
              - type: 'null'
              - $ref: '#/components/schemas/MediumType'
        - name: album_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
            nullable: true
        - name: filename
          in: query
          required: true
          schema:
            type: string
        - name: extension
          in: query
          required: true
          schema:
            type: string
        - name: priority
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: date_taken
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: camera_make
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: camera_model
          in: query
          required: false
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Binary'
        required: true
      responses:
        '201':
          description: The id of the newly created medium
          content:
            application/json:
              schema:
                type: string
                format: uuid
  /api/v1/medium/{medium_id}:
    delete:
      tags:
        - medium
      operationId: delete_medium
      parameters:
        - name: medium_id
          in: path
          description: The id of the medium to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Deletes the medium
          content:
            application/json: {}
  /api/v1/medium/{medium_id}/item/{format}:
    post:
      tags:
        - medium
      operationId: add_medium_item
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
        - name: extension
          in: query
          required: true
          schema:
            type: string
        - name: priority
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: date_taken
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: camera_make
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: camera_model
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: medium_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/MediumItemType'
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Binary'
        required: true
      responses:
        '201':
          description: The id of the new medium item
          content:
            application/json:
              schema:
                type: string
                format: uuid
  /api/v1/medium/{medium_id}/item/{item_id}/raw:
    get:
      tags:
        - medium
      operationId: get_medium_item
      parameters:
        - name: medium_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The raw file
          headers:
            content-type:
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Binary'
  /api/v1/medium/{medium_id}/preview:
    get:
      tags:
        - medium
      operationId: get_medium_preview
      parameters:
        - name: width
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: height
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: medium_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The raw file
          headers:
            content-type:
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Binary'
  /api/v1/user/stats:
    get:
      tags:
        - user
      operationId: user_stats
      responses:
        '200':
          description: Statistics of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStats'
components:
  schemas:
    AlbumResponse:
      type: object
      required:
        - id
        - title
        - number_of_items
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        maximum_date:
          type: string
          format: date-time
          nullable: true
        minimum_date:
          type: string
          format: date-time
          nullable: true
        number_of_items:
          type: integer
          format: int64
          minimum: 0
        title:
          type: string
    Binary:
      type: string
      format: binary
    CreateAlbumInput:
      type: object
      required:
        - title
      properties:
        description:
          type: string
          nullable: true
        title:
          type: string
    InfoResponse:
      type: object
      required:
        - version
        - client_id
        - token_url
        - authorize_url
      properties:
        authorize_url:
          type: string
        client_id:
          type: string
        token_url:
          type: string
        version:
          type: string
    MediumItemResponse:
      type: object
      required:
        - id
        - is_primary
        - medium_item_type
        - mime
        - filename
        - filesize
        - priority
        - last_saved
      properties:
        filename:
          type: string
        filesize:
          type: integer
          format: int64
          minimum: 0
        height:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          format: uuid
        is_primary:
          type: boolean
        last_saved:
          type: string
          format: date-time
        locations:
          type: array
          items:
            $ref: '#/components/schemas/StorageLocation'
        medium_item_type:
          $ref: '#/components/schemas/MediumItemType'
        mime:
          type: string
        priority:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
          nullable: true
    MediumItemType:
      type: string
      enum:
        - Original
        - Edit
        - Preview
        - Sidecar
    MediumResponse:
      type: object
      required:
        - id
        - medium_type
        - items
      properties:
        album_id:
          type: string
          format: uuid
          nullable: true
        camera_make:
          type: string
          nullable: true
        camera_model:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/MediumItemResponse'
        medium_type:
          $ref: '#/components/schemas/MediumType'
        taken_at:
          type: string
          format: date-time
          nullable: true
    MediumType:
      type: string
      enum:
        - PHOTO
        - VIDEO
        - LIVE_PHOTO
        - VECTOR
        - SEQUENCE
        - GIF
        - OTHER
    StorageLocation:
      type: object
      required:
        - variant
        - path
      properties:
        path:
          type: string
        variant:
          $ref: '#/components/schemas/StorageVariant'
    StorageVariant:
      type: string
      enum:
        - Originals
        - Cache
        - Temp
    UserStats:
      type: object
      required:
        - quota
        - quota_used
        - albums
        - media
      properties:
        albums:
          type: integer
          format: int64
          minimum: 0
        media:
          type: integer
          format: int64
          minimum: 0
        quota:
          type: string
        quota_used:
          type: string
tags:
  - name: medium
    description: Medium API
  - name: album
    description: Album API
  - name: system
    description: System API
  - name: user
    description: User API
